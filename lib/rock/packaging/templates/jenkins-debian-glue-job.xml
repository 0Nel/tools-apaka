<?xml version='1.0' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.4">
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>7</daysToKeep>
    <numToKeep>5</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>release</name>
          <description></description>
          <defaultValue>master</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <jenkins.triggers.ReverseBuildTrigger>
      <spec></spec>
      <upstreamProjects><%= options[:dependencies] %></upstreamProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </jenkins.triggers.ReverseBuildTrigger>
  </triggers>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <axes>
      <hudson.matrix.TextAxis>
          <name>architecture</name>
          <values>
              <% options[:architectures].each do |arch| %>
              <string><%= arch %></string>
              <% end %>
          </values>
      </hudson.matrix.TextAxis>
      <hudson.matrix.TextAxis>
          <name>distribution</name>
          <values>
              <% options[:distributions].each do |dist| %>
              <string><%= dist %></string>
              <% end %>
          </values>
      </hudson.matrix.TextAxis>
  </axes>
  <combinationFilter>!(distribution == &quot;trusty&quot; &amp;&amp; architecture == &quot;armel&quot;) &amp;&amp; !(distribution == &quot;trusty&quot; &amp;&amp; architecture == &quot;armhf&quot;) &amp;&amp; !(distribution == &quot;wheezy&quot; &amp;&amp; architecture == &quot;arm64&quot;) &amp;&amp; !(distribution == &quot;wheezy&quot; &amp;&amp; architecture == &quot;amd64&quot;) &amp;&amp; !(distribution == &quot;wheezy&quot; &amp;&amp; architecture == &quot;i386&quot;) </combinationFilter>
  <builders>
    <hudson.tasks.Shell>
      <command>dest_dir=`pwd`
build_dir=`echo <%= File.dirname ENV['AUTOPROJ_CURRENT_ROOT'] %>/${release}/build/deb-packaging/$architecture`

echo "Destination dir for <%= package_name %> ($architecture): $dest_dir"
echo "Creating build dir for <%= package_name %> ($architecture): $build_dir"
mkdir -p $build_dir

cd <%= File.dirname ENV['AUTOPROJ_CURRENT_ROOT'] %>/${release}
. <%= File.dirname ENV['AUTOPROJ_CURRENT_ROOT'] %>/${release}/env.sh
while [ 1 ]
do
    mkdir -p <%= File.dirname ENV['AUTOPROJ_CURRENT_ROOT'] %>/${release}/autoproj.lock
    if [ ! -e <%= File.dirname ENV['AUTOPROJ_CURRENT_ROOT'] %>/${release}/autoproj.lock/<%= options[:debian_name] %> ]
    then
        touch <%= File.dirname ENV['AUTOPROJ_CURRENT_ROOT'] %>/${release}/autoproj.lock/<%= options[:debian_name] %>
        deb_package --patch-dir <%= File.dirname ENV['AUTOPROJ_CURRENT_ROOT'] %>/${release}/obs_patches --dest-dir $dest_dir --build-dir $build_dir --rebuild --<%= options[:type] %> <%= package_name %>
        break
    else
        echo "<%= options[:debian_name] %> ($architecture) waiting for lock"
        sleep 2
    fi
done
cd -
# Making sure that the artifact land in the workspace directory
# This is different for the gem, since it creates a directory ruby-my_gem
# in the workspace -- all files need to be in the workspace dir when
# calling build-and-provide-package -- so copy them there
<% if options[:type] == :gem %>
mv $dest_dir/<%= options[:dir_name] %>/* .
<% else %>
mv $build_dir/<%= options[:dir_name] %>/* .
<% end %> </command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>
export REMOVE_FROM_RELEASE=true
/usr/bin/build-and-provide-package

cd /stuff/rock/${release}
. /stuff/rock/${release}/env.sh
deb_package --update-list <%= File.dirname ENV['AUTOPROJ_CURRENT_ROOT'] %>/${release}/rock-osdeps.osdeps <%= package_name %>
deb_package --update-list <%= File.dirname ENV['AUTOPROJ_CURRENT_ROOT'] %>/${release}/rock-osdeps-${architecture}.osdeps <%= package_name %>
      </command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>rm -rf <%= File.dirname ENV['AUTOPROJ_CURRENT_ROOT'] %>/${release}/autoproj.lock</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>*.gz,*.bz2,*.xz,*.deb,*.dsc,*.changes</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.24">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.14.1">
      <strategy class="hudson.plugins.build_timeout.impl.LikelyStuckTimeOutStrategy"/>
<!--      <strategy class="hudson.plugins.build_timeout.impl.ElasticTimeOutStrategy">
        <timeoutPercentage>150</timeoutPercentage>
        <numberOfBuilds>5</numberOfBuilds>
        <timeoutMinutesElasticDefault>60</timeoutMinutesElasticDefault>
      </strategy>
-->
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
    <touchStoneCombinationFilter></touchStoneCombinationFilter>
    <touchStoneResultCondition>
      <name>SUCCESS</name>
      <ordinal>0</ordinal>
      <color>BLUE</color>
      <completeBuild>true</completeBuild>
    </touchStoneResultCondition>
  </executionStrategy>
</matrix-project>
